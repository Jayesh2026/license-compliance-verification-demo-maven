name: License Compliance Verification

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  issues: read
  checks: write

jobs:
  license-compliance-verification:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      # Removing Maven Wrapper Script
      - name: 'License Finder fix with mvnw'
        run: rm mvnw

      # Run License Finder
      - name: 'Run License Finder'
        uses: jmservera/license-finder-action@main
        with:
          permitted-licenses: MIT,Apache-2.0
          approved-dependencies: |
                                 hamcrest,hamcrest-core,hamcrest-library
                                 junit-jupiter,junit-jupiter-api,junit-jupiter-engine,javax.annotation-api
          report-name: license_finder_report.xml
          base-path: ${{ github.workspace }}

      # Publish Report to GitHub UI
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.2.0
        if: always()
        with:
          junit_files: "license_finder_report.xml"

      # Upload Report In Artifact
      - name: 'Upload Dependency Review Report In Artifact'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-finder-report
          path: ${{ github.workspace }}/license_finder_report.xml

      # Login into container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

        # Packaging Report and Upload to Contaier registry
      - name: Packaging Report & Upload to Container registry
        run: |
          echo "FROM alpine" > Dockerfile
          echo "COPY license_finder_report.xml /license_finder_report.xml" >> Dockerfile
          echo "CMD [\"cat\", \"/license_finder_report.xml\"]" >> Dockerfile

          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')

          IMAGE_TAG="ghcr.io/${REPO_OWNER}/${REPO_NAME}/license-finder-report:latest"

          docker build -t $IMAGE_TAG .
          docker push "$IMAGE_TAG"

          echo "Pull Image Using Command: docker pull $IMAGE_TAG"
          echo "Extract Report Using Command: docker run --rm $IMAGE_TAG > license_finder_report.xml"